import { useEffect, useState } from 'react'
import Head from 'next/head'
import BoardCheckers from '../components/Home/BoardCheckers';
import { Board } from '../model/Board'
import styles from '../styles/Home.module.css'
import { Player } from '../model/Player';
import { Colors } from '../model/Colors';
import { Figure } from '../model/figures/Figure';

export default function Home() {
  const [board, setBoard] = useState(new Board);
  const [show, setShow] = useState(false);
  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));
  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));
  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null);
  const [currentFigure, setCurrentFigure ] = useState<Figure>(null);

  useEffect(() => {
    restart();
    setShow(true);
    setCurrentPlayer(whitePlayer);
  }, [])

  function restart() {
    const newBoard = new Board();
    newBoard.initBoard();
    newBoard.addFigures();
    setBoard(newBoard);
  }

  function swapPlayer(ok: string) {
    if(ok === 'one'){
      setCurrentPlayer(!currentFigure ? (currentPlayer?.color === Colors.WHITE ? blackPlayer : whitePlayer) : (currentFigure.color === Colors.WHITE ? blackPlayer : whitePlayer));
    }   else  
    if(ok === 'two'){
      setCurrentPlayer(blackPlayer);
    }  else   
    if(ok === 'three'){
      setCurrentPlayer(whitePlayer);
    }  else   
    if(ok === 'four'){
      setCurrentPlayer(null);
    }     
  }
  function swapFigure(figure: Figure) {    
   if(figure){
    setCurrentFigure(figure);
    setCurrentPlayer(null);
   } 
   else {  
    setCurrentFigure(null);
   }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />        
      </Head>

      <main className="app">
        <BoardCheckers 
          board={board} 
          setBoard={setBoard} 
          currentPlayer={currentPlayer} 
          currentFigure={currentFigure} 
          swapPlayer={swapPlayer} 
          swapFigure={swapFigure}
          restart={restart}
          show={show}
          setShow={setShow}
        />     
      </main>

    </div>
  )
}
