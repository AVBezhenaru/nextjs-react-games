import { useEffect, useState } from 'react';
import Head from 'next/head';
import { useDispatch } from 'react-redux';

import BoardCheckers from '../../checkers/components/Home/BoardCheckers';
import { Board } from '../../checkers/model/Board';
import { Player } from '../../checkers/model/Player';
import { Colors } from '../../checkers/model/Colors';
import { Figure } from '../../checkers/model/figures/Figure';
import { setShow } from '../../checkers/store/checkersReducer';
import { SetPlayer } from '../../checkers/components/Home/SetPlayer';

export default function Play() {
  const dispatch = useDispatch();

  const [board, setBoard] = useState(new Board());

  const [whitePlayer] = useState(SetPlayer().find((el) => el.color === Colors.WHITE));
  const [blackPlayer] = useState(SetPlayer().find((el) => el.color === Colors.BLACK));
  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(whitePlayer);
  const [currentFigure, setCurrentFigure] = useState<Figure | null>(null);

  const restart = () => {
    const newBoard = new Board();
    newBoard.initBoard();
    newBoard.addFigures();
    setBoard(newBoard);
  };
  useEffect(() => {
    restart();
    dispatch(setShow(true));
    setCurrentPlayer(whitePlayer);
  }, []);

  const switchPlayerColor = (currentFigure: Figure | null, currentPlayer: Player | null) => {
    if (currentPlayer?.color === Colors.WHITE) {
      return blackPlayer;
    }
    return whitePlayer;
  };

  const swapPlayer = (ok: string) => {
    if (ok === 'one') {
      setCurrentPlayer(switchPlayerColor(currentFigure, currentPlayer));
    } else if (ok === 'two') {
      setCurrentPlayer(blackPlayer);
    } else if (ok === 'three') {
      setCurrentPlayer(whitePlayer);
    } else if (ok === 'four') {
      setCurrentPlayer(null);
    }
  };

  const swapFigure = (figure: Figure | null) => {
    if (figure) {
      setCurrentFigure(figure);
      setCurrentPlayer(null);
    } else {
      setCurrentFigure(null);
    }
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="app">
        <BoardCheckers
          board={board}
          setBoard={setBoard}
          currentPlayer={currentPlayer}
          currentFigure={currentFigure}
          swapPlayer={swapPlayer}
          swapFigure={swapFigure}
          restart={restart}
        />
      </main>
    </div>
  );
}
